{"ast":null,"code":"var _jsxFileName = \"E:\\\\.3 DBMS\\\\Project\\\\Project working copy\\\\src\\\\components\\\\noticeboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./noticeboard.css\";\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [newPostContent, setNewPostContent] = useState(\"\");\n//   const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\n\n//   useEffect(() => {\n//     // Fetch posts from the server (replace with actual API endpoint)\n//     fetch(\"/posts\")\n//       .then((response) => response.json())\n//       .then((data) => setPosts(data));\n//   }, []);\n\n//   const handleLike = (postId) => {\n//     fetch(`/posts/${postId}/like`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ userId }),\n//     }).then(() => {\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, liked: true } : post)));\n//     });\n//   };\n\n//   const handleComment = (postId, comment) => {\n//     fetch(`/posts/${postId}/comment`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ userId, comment }),\n//     }).then(() => {\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, comments: [...post.comments, { userId, comment }] } : post)));\n//     });\n//   };\n\n//   const handleNewPost = () => {\n//     const newPost = {\n//       content: newPostContent,\n//       likes: [],\n//       comments: [],\n//     };\n\n//     // Post new content to server (replace with actual API endpoint)\n//     fetch(\"/posts\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(newPost),\n//     }).then(() => {\n//       setPosts([newPost, ...posts]); // Add new post to the front\n//       setNewPostContent(\"\"); // Clear the content field\n//     });\n//   };\n\n//   return (\n//     <div className=\"noticeboard-container\">\n//       <div className=\"new-post-block\">\n//         <textarea\n//           placeholder=\"Write something new...\"\n//           value={newPostContent}\n//           onChange={(e) => setNewPostContent(e.target.value)}\n//         ></textarea>\n//         <button onClick={handleNewPost}>Post</button>\n//       </div>\n\n//       <div className=\"posts-list\">\n//         {posts.map((post) => (\n//           <div key={post._id} className=\"post-block\">\n//             <div className=\"post-content\">\n//               <p>{post.content}</p>\n//             </div>\n\n//             <div className=\"post-actions\">\n//               <button className=\"like-btn\" onClick={() => handleLike(post._id)}>\n//                 Like\n//               </button>\n//               <span className=\"like-count\">{post.likes.length} Likes</span>\n//             </div>\n\n//             <div className=\"comments-section\">\n//               <div className=\"comments-list\">\n//                 {post.comments.map((comment, idx) => (\n//                   <div key={idx} className=\"comment-item\">\n//                     <strong>{comment.userId}:</strong> {comment.comment}\n//                   </div>\n//                 ))}\n//               </div>\n\n//               <textarea\n//                 placeholder=\"Add a comment\"\n//                 onBlur={(e) => handleComment(post._id, e.target.value)}\n//                 className=\"comment-input\"\n//               />\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;\n\nimport React, { useState } from 'react';\nimport './noticeboard.css';\nimport { FaHeart, FaComment, FaShare, FaUserCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Noticeboard = () => {\n  _s();\n  const [posts, setPosts] = useState([{\n    id: 1,\n    author: 'Gurpreet Kaur Virdi',\n    date: 'Jul 29, 2024',\n    title: 'Tuning into Success: KukuFMâ€™s Journey to Audio Excellence',\n    description: 'The financial year ending 2018 will always remain fundamental when somewhere down the line we track the economic growth of India. In this year, India saw...',\n    imageUrl: 'https://example.com/sample-image.jpg',\n    // Add an image URL here\n    likes: 4,\n    comments: 3,\n    isLiked: false\n  }]);\n  const [newPost, setNewPost] = useState('');\n  const [comment, setComment] = useState('');\n  const handleLike = postId => {\n    setPosts(posts.map(post => post.id === postId ? {\n      ...post,\n      isLiked: !post.isLiked,\n      likes: post.isLiked ? post.likes - 1 : post.likes + 1\n    } : post));\n  };\n  const handleComment = postId => {\n    if (comment.trim()) {\n      // Handle comment submission (for simplicity, we just reset the input)\n      setComment('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"noticeboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Share some news...\",\n        value: newPost,\n        onChange: e => setNewPost(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Attach Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tag People\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button\",\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n            className: \"profile-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: post.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FaShare, {\n            className: \"share-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            alt: \"Post\",\n            className: \"post-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [post.likes, \" people liked the post.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"like-comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(post.id),\n              className: post.isLiked ? 'liked' : '',\n              children: [/*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), \" \", post.isLiked ? 'Liked' : 'Like']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: [/*#__PURE__*/_jsxDEV(FaComment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 25\n              }, this), \" Comment\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-section\",\n          children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n            className: \"profile-icon-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Press enter to comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && handleComment(post.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(Noticeboard, \"B9i7doQFwcwLSSlAgwTjk+AnwWY=\");\n_c = Noticeboard;\nexport default Noticeboard;\nvar _c;\n$RefreshReg$(_c, \"Noticeboard\");","map":{"version":3,"names":["React","useState","FaHeart","FaComment","FaShare","FaUserCircle","jsxDEV","_jsxDEV","Noticeboard","_s","posts","setPosts","id","author","date","title","description","imageUrl","likes","comments","isLiked","newPost","setNewPost","comment","setComment","handleLike","postId","map","post","handleComment","trim","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","type","onKeyPress","key","_c","$RefreshReg$"],"sources":["E:/.3 DBMS/Project/Project working copy/src/components/noticeboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"./noticeboard.css\";\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [newPostContent, setNewPostContent] = useState(\"\");\r\n//   const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\r\n\r\n//   useEffect(() => {\r\n//     // Fetch posts from the server (replace with actual API endpoint)\r\n//     fetch(\"/posts\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setPosts(data));\r\n//   }, []);\r\n\r\n//   const handleLike = (postId) => {\r\n//     fetch(`/posts/${postId}/like`, {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ userId }),\r\n//     }).then(() => {\r\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, liked: true } : post)));\r\n//     });\r\n//   };\r\n\r\n//   const handleComment = (postId, comment) => {\r\n//     fetch(`/posts/${postId}/comment`, {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ userId, comment }),\r\n//     }).then(() => {\r\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, comments: [...post.comments, { userId, comment }] } : post)));\r\n//     });\r\n//   };\r\n\r\n//   const handleNewPost = () => {\r\n//     const newPost = {\r\n//       content: newPostContent,\r\n//       likes: [],\r\n//       comments: [],\r\n//     };\r\n\r\n//     // Post new content to server (replace with actual API endpoint)\r\n//     fetch(\"/posts\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(newPost),\r\n//     }).then(() => {\r\n//       setPosts([newPost, ...posts]); // Add new post to the front\r\n//       setNewPostContent(\"\"); // Clear the content field\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard-container\">\r\n//       <div className=\"new-post-block\">\r\n//         <textarea\r\n//           placeholder=\"Write something new...\"\r\n//           value={newPostContent}\r\n//           onChange={(e) => setNewPostContent(e.target.value)}\r\n//         ></textarea>\r\n//         <button onClick={handleNewPost}>Post</button>\r\n//       </div>\r\n\r\n//       <div className=\"posts-list\">\r\n//         {posts.map((post) => (\r\n//           <div key={post._id} className=\"post-block\">\r\n//             <div className=\"post-content\">\r\n//               <p>{post.content}</p>\r\n//             </div>\r\n\r\n//             <div className=\"post-actions\">\r\n//               <button className=\"like-btn\" onClick={() => handleLike(post._id)}>\r\n//                 Like\r\n//               </button>\r\n//               <span className=\"like-count\">{post.likes.length} Likes</span>\r\n//             </div>\r\n\r\n//             <div className=\"comments-section\">\r\n//               <div className=\"comments-list\">\r\n//                 {post.comments.map((comment, idx) => (\r\n//                   <div key={idx} className=\"comment-item\">\r\n//                     <strong>{comment.userId}:</strong> {comment.comment}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n\r\n//               <textarea\r\n//                 placeholder=\"Add a comment\"\r\n//                 onBlur={(e) => handleComment(post._id, e.target.value)}\r\n//                 className=\"comment-input\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Noticeboard;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './noticeboard.css';\r\nimport { FaHeart, FaComment, FaShare, FaUserCircle } from 'react-icons/fa';\r\n\r\nconst Noticeboard = () => {\r\n  const [posts, setPosts] = useState([\r\n    {\r\n      id: 1,\r\n      author: 'Gurpreet Kaur Virdi',\r\n      date: 'Jul 29, 2024',\r\n      title: 'Tuning into Success: KukuFMâ€™s Journey to Audio Excellence',\r\n      description: 'The financial year ending 2018 will always remain fundamental when somewhere down the line we track the economic growth of India. In this year, India saw...',\r\n      imageUrl: 'https://example.com/sample-image.jpg', // Add an image URL here\r\n      likes: 4,\r\n      comments: 3,\r\n      isLiked: false,\r\n    },\r\n  ]);\r\n\r\n  const [newPost, setNewPost] = useState('');\r\n  const [comment, setComment] = useState('');\r\n\r\n  const handleLike = (postId) => {\r\n    setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\r\n  };\r\n\r\n  const handleComment = (postId) => {\r\n    if (comment.trim()) {\r\n      // Handle comment submission (for simplicity, we just reset the input)\r\n      setComment('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"noticeboard\">\r\n      {/* Add New Post Section */}\r\n      <div className=\"new-post\">\r\n        <textarea\r\n          placeholder=\"Share some news...\"\r\n          value={newPost}\r\n          onChange={(e) => setNewPost(e.target.value)}\r\n        />\r\n        <div className=\"post-options\">\r\n          <span>Add Photo</span>\r\n          <span>Add Video</span>\r\n          <span>Attach Files</span>\r\n          <span>Tag People</span>\r\n          <button className=\"share-button\">Share</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Post Feed */}\r\n      <div className=\"posts\">\r\n        {posts.map(post => (\r\n          <div className=\"post-card\" key={post.id}>\r\n            {/* Post Header */}\r\n            <div className=\"post-header\">\r\n              <FaUserCircle className=\"profile-icon\" />\r\n              <div>\r\n                <h4>{post.author}</h4>\r\n                <span>{post.date}</span>\r\n              </div>\r\n              <FaShare className=\"share-icon\" />\r\n            </div>\r\n\r\n            {/* Post Content */}\r\n            <div className=\"post-content\">\r\n              <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n              <div className=\"post-details\">\r\n                <h3>{post.title}</h3>\r\n                <p>{post.description}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Like and Comment Section */}\r\n            <div className=\"post-actions\">\r\n              <span>{post.likes} people liked the post.</span>\r\n              <div className=\"like-comment\">\r\n                <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\r\n                  <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\r\n                </button>\r\n                <button><FaComment /> Comment</button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Comment Section */}\r\n            <div className=\"comment-section\">\r\n              <FaUserCircle className=\"profile-icon-small\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Press enter to comment\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && handleComment(post.id)}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Noticeboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}