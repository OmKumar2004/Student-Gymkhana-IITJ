{"ast":null,"code":"var _jsxFileName = \"E:\\\\.3 DBMS\\\\Project\\\\Project working copy\\\\src\\\\components\\\\noticeboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./noticeboard.css\";\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [newPostContent, setNewPostContent] = useState(\"\");\n//   const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\n\n//   useEffect(() => {\n//     // Fetch posts from the server (replace with actual API endpoint)\n//     fetch(\"/posts\")\n//       .then((response) => response.json())\n//       .then((data) => setPosts(data));\n//   }, []);\n\n//   const handleLike = (postId) => {\n//     fetch(`/posts/${postId}/like`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ userId }),\n//     }).then(() => {\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, liked: true } : post)));\n//     });\n//   };\n\n//   const handleComment = (postId, comment) => {\n//     fetch(`/posts/${postId}/comment`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ userId, comment }),\n//     }).then(() => {\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, comments: [...post.comments, { userId, comment }] } : post)));\n//     });\n//   };\n\n//   const handleNewPost = () => {\n//     const newPost = {\n//       content: newPostContent,\n//       likes: [],\n//       comments: [],\n//     };\n\n//     // Post new content to server (replace with actual API endpoint)\n//     fetch(\"/posts\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(newPost),\n//     }).then(() => {\n//       setPosts([newPost, ...posts]); // Add new post to the front\n//       setNewPostContent(\"\"); // Clear the content field\n//     });\n//   };\n\n//   return (\n//     <div className=\"noticeboard-container\">\n//       <div className=\"new-post-block\">\n//         <textarea\n//           placeholder=\"Write something new...\"\n//           value={newPostContent}\n//           onChange={(e) => setNewPostContent(e.target.value)}\n//         ></textarea>\n//         <button onClick={handleNewPost}>Post</button>\n//       </div>\n\n//       <div className=\"posts-list\">\n//         {posts.map((post) => (\n//           <div key={post._id} className=\"post-block\">\n//             <div className=\"post-content\">\n//               <p>{post.content}</p>\n//             </div>\n\n//             <div className=\"post-actions\">\n//               <button className=\"like-btn\" onClick={() => handleLike(post._id)}>\n//                 Like\n//               </button>\n//               <span className=\"like-count\">{post.likes.length} Likes</span>\n//             </div>\n\n//             <div className=\"comments-section\">\n//               <div className=\"comments-list\">\n//                 {post.comments.map((comment, idx) => (\n//                   <div key={idx} className=\"comment-item\">\n//                     <strong>{comment.userId}:</strong> {comment.comment}\n//                   </div>\n//                 ))}\n//               </div>\n\n//               <textarea\n//                 placeholder=\"Add a comment\"\n//                 onBlur={(e) => handleComment(post._id, e.target.value)}\n//                 className=\"comment-input\"\n//               />\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;\n\n// import React, { useState } from 'react';\n// import './noticeboard.css';\n// import { FaHeart, FaComment, FaShare, FaUserCircle } from 'react-icons/fa';\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([\n//     {\n//       id: 1,\n//       author: 'Gurpreet Kaur Virdi',\n//       date: 'Jul 29, 2024',\n//       title: 'Tuning into Success: KukuFM’s Journey to Audio Excellence',\n//       description: 'The financial year ending 2018 will always remain fundamental when somewhere down the line we track the economic growth of India. In this year, India saw...',\n//       imageUrl: 'https://example.com/sample-image.jpg', // Add an image URL here\n//       likes: 4,\n//       comments: 3,\n//       isLiked: false,\n//     },\n//   ]);\n\n//   const [newPost, setNewPost] = useState('');\n//   const [comment, setComment] = useState('');\n\n//   const handleLike = (postId) => {\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\n//   };\n\n//   const handleComment = (postId) => {\n//     if (comment.trim()) {\n//       // Handle comment submission (for simplicity, we just reset the input)\n//       setComment('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"noticeboard\">\n//       {/* Add New Post Section */}\n//       <div className=\"new-post\">\n//         <textarea\n//           placeholder=\"Share some news...\"\n//           value={newPost}\n//           onChange={(e) => setNewPost(e.target.value)}\n//         />\n//         <div className=\"post-options\">\n//           <span>Add Photo</span>\n//           <span>Add Video</span>\n//           <span>Attach Files</span>\n//           <span>Tag People</span>\n//           <button className=\"share-button\">Share</button>\n//         </div>\n//       </div>\n\n//       {/* Post Feed */}\n//       <div className=\"posts\">\n//         {posts.map(post => (\n//           <div className=\"post-card\" key={post.id}>\n//             {/* Post Header */}\n//             <div className=\"post-header\">\n//               <FaUserCircle className=\"profile-icon\" />\n//               <div>\n//                 <h4>{post.author}</h4>\n//                 <span>{post.date}</span>\n//               </div>\n//               <FaShare className=\"share-icon\" />\n//             </div>\n\n//             {/* Post Content */}\n//             <div className=\"post-content\">\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\n//               <div className=\"post-details\">\n//                 <h3>{post.title}</h3>\n//                 <p>{post.description}</p>\n//               </div>\n//             </div>\n\n//             {/* Like and Comment Section */}\n//             <div className=\"post-actions\">\n//               <span>{post.likes} people liked the post.</span>\n//               <div className=\"like-comment\">\n//                 <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\n//                   <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\n//                 </button>\n//                 <button><FaComment /> Comment</button>\n//               </div>\n//             </div>\n\n//             {/* Comment Section */}\n//             <div className=\"comment-section\">\n//               <FaUserCircle className=\"profile-icon-small\" />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Press enter to comment\"\n//                 value={comment}\n//                 onChange={(e) => setComment(e.target.value)}\n//                 onKeyPress={(e) => e.key === 'Enter' && handleComment(post.id)}\n//               />\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;\n\nimport React, { useState } from 'react';\nimport './noticeboard.css';\nimport { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Noticeboard = () => {\n  _s();\n  const [posts, setPosts] = useState([{\n    id: 1,\n    author: 'Om Kumar',\n    date: 'Oct 29, 2024',\n    title: 'Srijan—the Center of Excellence on Generative AI at IIT Jodhpur.',\n    description: 'Srijan—the Center of Excellence on Generative AI at IIT Jodhpur....',\n    imageUrl: '/assets/news.png',\n    likes: 4,\n    comments: 3,\n    isLiked: false,\n    likedBy: ['Om', 'Bob', 'Charlie'],\n    commentsList: ['Nice post!', 'Very informative!']\n  }]);\n  const [newPost, setNewPost] = useState('');\n  const [comment, setComment] = useState('');\n  const handleLike = postId => {\n    setPosts(posts.map(post => post.id === postId ? {\n      ...post,\n      isLiked: !post.isLiked,\n      likes: post.isLiked ? post.likes - 1 : post.likes + 1\n    } : post));\n  };\n  const handleComment = postId => {\n    if (comment.trim()) {\n      setPosts(posts.map(post => post.id === postId ? {\n        ...post,\n        commentsList: [...post.commentsList, comment]\n      } : post));\n      setComment('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"noticeboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Share Your News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-post\",\n      children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n        className: \"poster-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Share some news...\",\n          value: newPost,\n          onChange: e => setNewPost(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Attach Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Tag People\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"post-button\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n            className: \"profile-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: post.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-date\",\n              children: post.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FaShare, {\n            className: \"share-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            alt: \"Post\",\n            className: \"post-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLike(post.id),\n            className: post.isLiked ? 'liked' : '',\n            children: [/*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), \" \", post.isLiked ? 'Liked' : 'Like']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"likes-comments\",\n            children: [post.likes, \" likes \\xB7 \", post.commentsList.length, \" comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-section\",\n          children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n            className: \"profile-icon-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Write a comment...\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), comment && /*#__PURE__*/_jsxDEV(FaArrowRight, {\n            onClick: () => handleComment(post.id),\n            className: \"comment-submit-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(Noticeboard, \"Ujb8YnL32Bw3VOJLBB9fHBbcjTg=\");\n_c = Noticeboard;\nexport default Noticeboard;\nvar _c;\n$RefreshReg$(_c, \"Noticeboard\");","map":{"version":3,"names":["React","useState","FaHeart","FaComment","FaShare","FaUserCircle","FaArrowRight","jsxDEV","_jsxDEV","Noticeboard","_s","posts","setPosts","id","author","date","title","description","imageUrl","likes","comments","isLiked","likedBy","commentsList","newPost","setNewPost","comment","setComment","handleLike","postId","map","post","handleComment","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","src","alt","onClick","length","type","_c","$RefreshReg$"],"sources":["E:/.3 DBMS/Project/Project working copy/src/components/noticeboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"./noticeboard.css\";\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [newPostContent, setNewPostContent] = useState(\"\");\r\n//   const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\r\n\r\n//   useEffect(() => {\r\n//     // Fetch posts from the server (replace with actual API endpoint)\r\n//     fetch(\"/posts\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setPosts(data));\r\n//   }, []);\r\n\r\n//   const handleLike = (postId) => {\r\n//     fetch(`/posts/${postId}/like`, {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ userId }),\r\n//     }).then(() => {\r\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, liked: true } : post)));\r\n//     });\r\n//   };\r\n\r\n//   const handleComment = (postId, comment) => {\r\n//     fetch(`/posts/${postId}/comment`, {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ userId, comment }),\r\n//     }).then(() => {\r\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, comments: [...post.comments, { userId, comment }] } : post)));\r\n//     });\r\n//   };\r\n\r\n//   const handleNewPost = () => {\r\n//     const newPost = {\r\n//       content: newPostContent,\r\n//       likes: [],\r\n//       comments: [],\r\n//     };\r\n\r\n//     // Post new content to server (replace with actual API endpoint)\r\n//     fetch(\"/posts\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(newPost),\r\n//     }).then(() => {\r\n//       setPosts([newPost, ...posts]); // Add new post to the front\r\n//       setNewPostContent(\"\"); // Clear the content field\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard-container\">\r\n//       <div className=\"new-post-block\">\r\n//         <textarea\r\n//           placeholder=\"Write something new...\"\r\n//           value={newPostContent}\r\n//           onChange={(e) => setNewPostContent(e.target.value)}\r\n//         ></textarea>\r\n//         <button onClick={handleNewPost}>Post</button>\r\n//       </div>\r\n\r\n//       <div className=\"posts-list\">\r\n//         {posts.map((post) => (\r\n//           <div key={post._id} className=\"post-block\">\r\n//             <div className=\"post-content\">\r\n//               <p>{post.content}</p>\r\n//             </div>\r\n\r\n//             <div className=\"post-actions\">\r\n//               <button className=\"like-btn\" onClick={() => handleLike(post._id)}>\r\n//                 Like\r\n//               </button>\r\n//               <span className=\"like-count\">{post.likes.length} Likes</span>\r\n//             </div>\r\n\r\n//             <div className=\"comments-section\">\r\n//               <div className=\"comments-list\">\r\n//                 {post.comments.map((comment, idx) => (\r\n//                   <div key={idx} className=\"comment-item\">\r\n//                     <strong>{comment.userId}:</strong> {comment.comment}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n\r\n//               <textarea\r\n//                 placeholder=\"Add a comment\"\r\n//                 onBlur={(e) => handleComment(post._id, e.target.value)}\r\n//                 className=\"comment-input\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Noticeboard;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './noticeboard.css';\r\n// import { FaHeart, FaComment, FaShare, FaUserCircle } from 'react-icons/fa';\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([\r\n//     {\r\n//       id: 1,\r\n//       author: 'Gurpreet Kaur Virdi',\r\n//       date: 'Jul 29, 2024',\r\n//       title: 'Tuning into Success: KukuFM’s Journey to Audio Excellence',\r\n//       description: 'The financial year ending 2018 will always remain fundamental when somewhere down the line we track the economic growth of India. In this year, India saw...',\r\n//       imageUrl: 'https://example.com/sample-image.jpg', // Add an image URL here\r\n//       likes: 4,\r\n//       comments: 3,\r\n//       isLiked: false,\r\n//     },\r\n//   ]);\r\n\r\n//   const [newPost, setNewPost] = useState('');\r\n//   const [comment, setComment] = useState('');\r\n\r\n//   const handleLike = (postId) => {\r\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\r\n//   };\r\n\r\n//   const handleComment = (postId) => {\r\n//     if (comment.trim()) {\r\n//       // Handle comment submission (for simplicity, we just reset the input)\r\n//       setComment('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard\">\r\n//       {/* Add New Post Section */}\r\n//       <div className=\"new-post\">\r\n//         <textarea\r\n//           placeholder=\"Share some news...\"\r\n//           value={newPost}\r\n//           onChange={(e) => setNewPost(e.target.value)}\r\n//         />\r\n//         <div className=\"post-options\">\r\n//           <span>Add Photo</span>\r\n//           <span>Add Video</span>\r\n//           <span>Attach Files</span>\r\n//           <span>Tag People</span>\r\n//           <button className=\"share-button\">Share</button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Post Feed */}\r\n//       <div className=\"posts\">\r\n//         {posts.map(post => (\r\n//           <div className=\"post-card\" key={post.id}>\r\n//             {/* Post Header */}\r\n//             <div className=\"post-header\">\r\n//               <FaUserCircle className=\"profile-icon\" />\r\n//               <div>\r\n//                 <h4>{post.author}</h4>\r\n//                 <span>{post.date}</span>\r\n//               </div>\r\n//               <FaShare className=\"share-icon\" />\r\n//             </div>\r\n\r\n//             {/* Post Content */}\r\n//             <div className=\"post-content\">\r\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n//               <div className=\"post-details\">\r\n//                 <h3>{post.title}</h3>\r\n//                 <p>{post.description}</p>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Like and Comment Section */}\r\n//             <div className=\"post-actions\">\r\n//               <span>{post.likes} people liked the post.</span>\r\n//               <div className=\"like-comment\">\r\n//                 <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\r\n//                   <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\r\n//                 </button>\r\n//                 <button><FaComment /> Comment</button>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Comment Section */}\r\n//             <div className=\"comment-section\">\r\n//               <FaUserCircle className=\"profile-icon-small\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Press enter to comment\"\r\n//                 value={comment}\r\n//                 onChange={(e) => setComment(e.target.value)}\r\n//                 onKeyPress={(e) => e.key === 'Enter' && handleComment(post.id)}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Noticeboard;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './noticeboard.css';\r\nimport { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\r\n\r\nconst Noticeboard = () => {\r\n  const [posts, setPosts] = useState([\r\n    {\r\n      id: 1,\r\n      author: 'Om Kumar',\r\n      date: 'Oct 29, 2024',\r\n      title: 'Srijan—the Center of Excellence on Generative AI at IIT Jodhpur.',\r\n      description: 'Srijan—the Center of Excellence on Generative AI at IIT Jodhpur....',\r\n      imageUrl: '/assets/news.png',\r\n      likes: 4,\r\n      comments: 3,\r\n      isLiked: false,\r\n      likedBy: ['Om', 'Bob', 'Charlie'],\r\n      commentsList: ['Nice post!', 'Very informative!']\r\n    },\r\n  ]);\r\n\r\n  const [newPost, setNewPost] = useState('');\r\n  const [comment, setComment] = useState('');\r\n\r\n  const handleLike = (postId) => {\r\n    setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\r\n  };\r\n\r\n  const handleComment = (postId) => {\r\n    if (comment.trim()) {\r\n      setPosts(posts.map(post => post.id === postId ? { ...post, commentsList: [...post.commentsList, comment] } : post));\r\n      setComment('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"noticeboard\">\r\n      {/* Add New Post Section */}\r\n      <h2>Share Your News</h2>\r\n      <div className=\"new-post\">\r\n        <FaUserCircle className=\"poster-avatar\" />\r\n        <div className=\"post-input-area\">\r\n          <textarea\r\n            placeholder=\"Share some news...\"\r\n            value={newPost}\r\n            onChange={(e) => setNewPost(e.target.value)}\r\n          />\r\n          <div className=\"post-options\">\r\n            <span>Add Photo</span>\r\n            <span>Add Video</span>\r\n            <span>Attach Files</span>\r\n            <span>Tag People</span>\r\n            <button className=\"post-button\">Post</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Post Feed */}\r\n      <div className=\"posts\">\r\n        {posts.map(post => (\r\n          <div className=\"post-card\" key={post.id}>\r\n            {/* Post Header */}\r\n            <div className=\"post-header\">\r\n              <FaUserCircle className=\"profile-icon\" />\r\n              <div className=\"post-author\">\r\n                <h4>{post.author}</h4>\r\n                <span className=\"post-date\">{post.date}</span>\r\n              </div>\r\n              <FaShare className=\"share-icon\" />\r\n            </div>\r\n\r\n            {/* Post Content */}\r\n            <div className=\"post-content\">\r\n              <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n              <div className=\"post-details\">\r\n                <h3>{post.title}</h3>\r\n                <p>{post.description}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Like and Comment Section */}\r\n            <div className=\"post-actions\">\r\n              <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\r\n                <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\r\n              </button>\r\n              <span className=\"likes-comments\">\r\n                {post.likes} likes · {post.commentsList.length} comments\r\n              </span>\r\n            </div>\r\n\r\n            {/* Comment Section */}\r\n            <div className=\"comment-section\">\r\n              <FaUserCircle className=\"profile-icon-small\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Write a comment...\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n              />\r\n              {comment && <FaArrowRight onClick={() => handleComment(post.id)} className=\"comment-submit-icon\" />}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Noticeboard;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAC1B,SAASC,OAAO,EAAEC,SAAS,EAAEC,OAAO,EAAEC,YAAY,EAAEC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CACjC;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}