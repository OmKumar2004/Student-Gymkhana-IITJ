{"ast":null,"code":"// import React, { useState } from 'react';\n// import './Login.css';\n\n// const LoginPage = () => {\n//   const [form, setForm] = useState({\n//     field: '', // For either username or email\n//     pass: '',  // Changed password field to 'pass' to match backend\n//   });\n//   const [error, setError] = useState(null);\n\n//   const handleChange = (e) => {\n//     setForm({\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(null); // Reset error message before submission\n\n//     try {\n//       // Use the actual backend URL here\n//       const response = await fetch('http://localhost:3300/apis/v1/user/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(form), // Send form directly, where 'pass' is the password field\n//       });\n\n//       // Handling based on status code\n//       if (response.status !== 200) {\n//         const errorData = await response.json();\n\n//         // Handle specific status codes\n//         switch (response.status) {\n//           case 400:\n//             throw new Error(errorData.message || 'Bad request. Please check the entered details.');\n//           case 401:\n//             throw new Error(errorData.message || 'Invalid username/email or password.');\n//           case 500:\n//             throw new Error('Internal server error. Please try again later.');\n//           default:\n//             throw new Error(errorData.message || 'Login failed. Please try again.');\n//         }\n//       }\n\n//       const data = await response.json();\n//       // Assuming the data contains a token or session details, store them for later use\n//       localStorage.setItem('token', data.token); // Example of storing the token for later use\n//       console.log('Login successful:', data);\n\n//       // Optionally, redirect or update UI on successful login\n//       window.location.href = './'; // Adjust as needed for your app structure\n//     } catch (error) {\n//       setError(error.message);\n//       console.error('Error during login:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label>Username or Email</label>\n//           <input\n//             type=\"text\"\n//             name=\"field\" // Use the 'field' key to send either username or email\n//             value={form.field}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             name=\"pass\" // Changed 'password' to 'pass' for backend compatibility\n//             value={form.pass}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"login-btn\">Login</button>\n//       </form>\n\n//       {error && <div className=\"error-message\">{error}</div>}\n\n//       <div className=\"google-login\">\n//         <button className=\"google-btn\">Login with Google</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;","map":{"version":3,"names":[],"sources":["E:/.3 DBMS/Project/Project working copy_Integration/src/components/LoginPage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './Login.css';\r\n\r\n// const LoginPage = () => {\r\n//   const [form, setForm] = useState({\r\n//     field: '', // For either username or email\r\n//     pass: '',  // Changed password field to 'pass' to match backend\r\n//   });\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({\r\n//       ...form,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(null); // Reset error message before submission\r\n\r\n//     try {\r\n//       // Use the actual backend URL here\r\n//       const response = await fetch('http://localhost:3300/apis/v1/user/login', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(form), // Send form directly, where 'pass' is the password field\r\n//       });\r\n\r\n//       // Handling based on status code\r\n//       if (response.status !== 200) {\r\n//         const errorData = await response.json();\r\n\r\n//         // Handle specific status codes\r\n//         switch (response.status) {\r\n//           case 400:\r\n//             throw new Error(errorData.message || 'Bad request. Please check the entered details.');\r\n//           case 401:\r\n//             throw new Error(errorData.message || 'Invalid username/email or password.');\r\n//           case 500:\r\n//             throw new Error('Internal server error. Please try again later.');\r\n//           default:\r\n//             throw new Error(errorData.message || 'Login failed. Please try again.');\r\n//         }\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       // Assuming the data contains a token or session details, store them for later use\r\n//       localStorage.setItem('token', data.token); // Example of storing the token for later use\r\n//       console.log('Login successful:', data);\r\n\r\n//       // Optionally, redirect or update UI on successful login\r\n//       window.location.href = './'; // Adjust as needed for your app structure\r\n//     } catch (error) {\r\n//       setError(error.message);\r\n//       console.error('Error during login:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <h2>Login</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"form-group\">\r\n//           <label>Username or Email</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"field\" // Use the 'field' key to send either username or email\r\n//             value={form.field}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"pass\" // Changed 'password' to 'pass' for backend compatibility\r\n//             value={form.pass}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"login-btn\">Login</button>\r\n//       </form>\r\n\r\n//       {error && <div className=\"error-message\">{error}</div>}\r\n\r\n//       <div className=\"google-login\">\r\n//         <button className=\"google-btn\">Login with Google</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginPage;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}