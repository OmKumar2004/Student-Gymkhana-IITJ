{"ast":null,"code":"var _jsxFileName = \"E:\\\\.3 DBMS\\\\Project\\\\Project working copy\\\\src\\\\components\\\\noticeboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./noticeboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Noticeboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\n\n  useEffect(() => {\n    // Fetch posts from the server (replace with actual API endpoint)\n    fetch(\"/posts\").then(response => response.json()).then(data => setPosts(data));\n  }, []);\n  const handleLike = postId => {\n    fetch(`/posts/${postId}/like`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId\n      })\n    }).then(() => {\n      setPosts(posts.map(post => post._id === postId ? {\n        ...post,\n        liked: true\n      } : post));\n    });\n  };\n  const handleComment = (postId, comment) => {\n    fetch(`/posts/${postId}/comment`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId,\n        comment\n      })\n    }).then(() => {\n      setPosts(posts.map(post => post._id === postId ? {\n        ...post,\n        comments: [...post.comments, {\n          userId,\n          comment\n        }]\n      } : post));\n    });\n  };\n  const handleNewPost = () => {\n    const newPost = {\n      content: newPostContent,\n      likes: [],\n      comments: []\n    };\n\n    // Post new content to server (replace with actual API endpoint)\n    fetch(\"/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPost)\n    }).then(() => {\n      setPosts([newPost, ...posts]); // Add new post to the front\n      setNewPostContent(\"\"); // Clear the content field\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"noticeboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-post-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write something new...\",\n        value: newPostContent,\n        onChange: e => setNewPostContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewPost,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"like-btn\",\n            onClick: () => handleLike(post._id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"like-count\",\n            children: [post.likes.length, \" Likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-list\",\n            children: post.comments.map((comment, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [comment.userId, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), \" \", comment.comment]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Add a comment\",\n            onBlur: e => handleComment(post._id, e.target.value),\n            className: \"comment-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Noticeboard, \"mz4Uwv+nExga5iGOm9t18Vm5rJ0=\");\n_c = Noticeboard;\nexport default Noticeboard;\nvar _c;\n$RefreshReg$(_c, \"Noticeboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Noticeboard","_s","posts","setPosts","newPostContent","setNewPostContent","userId","setUserId","fetch","then","response","json","data","handleLike","postId","method","headers","body","JSON","stringify","map","post","_id","liked","handleComment","comment","comments","handleNewPost","newPost","content","likes","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","idx","onBlur","_c","$RefreshReg$"],"sources":["E:/.3 DBMS/Project/Project working copy/src/components/noticeboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./noticeboard.css\";\r\n\r\nconst Noticeboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [newPostContent, setNewPostContent] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\r\n\r\n  useEffect(() => {\r\n    // Fetch posts from the server (replace with actual API endpoint)\r\n    fetch(\"/posts\")\r\n      .then((response) => response.json())\r\n      .then((data) => setPosts(data));\r\n  }, []);\r\n\r\n  const handleLike = (postId) => {\r\n    fetch(`/posts/${postId}/like`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ userId }),\r\n    }).then(() => {\r\n      setPosts(posts.map((post) => (post._id === postId ? { ...post, liked: true } : post)));\r\n    });\r\n  };\r\n\r\n  const handleComment = (postId, comment) => {\r\n    fetch(`/posts/${postId}/comment`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ userId, comment }),\r\n    }).then(() => {\r\n      setPosts(posts.map((post) => (post._id === postId ? { ...post, comments: [...post.comments, { userId, comment }] } : post)));\r\n    });\r\n  };\r\n\r\n  const handleNewPost = () => {\r\n    const newPost = {\r\n      content: newPostContent,\r\n      likes: [],\r\n      comments: [],\r\n    };\r\n\r\n    // Post new content to server (replace with actual API endpoint)\r\n    fetch(\"/posts\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(newPost),\r\n    }).then(() => {\r\n      setPosts([newPost, ...posts]); // Add new post to the front\r\n      setNewPostContent(\"\"); // Clear the content field\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"noticeboard-container\">\r\n      <div className=\"new-post-block\">\r\n        <textarea\r\n          placeholder=\"Write something new...\"\r\n          value={newPostContent}\r\n          onChange={(e) => setNewPostContent(e.target.value)}\r\n        ></textarea>\r\n        <button onClick={handleNewPost}>Post</button>\r\n      </div>\r\n\r\n      <div className=\"posts-list\">\r\n        {posts.map((post) => (\r\n          <div key={post._id} className=\"post-block\">\r\n            <div className=\"post-content\">\r\n              <p>{post.content}</p>\r\n            </div>\r\n\r\n            <div className=\"post-actions\">\r\n              <button className=\"like-btn\" onClick={() => handleLike(post._id)}>\r\n                Like\r\n              </button>\r\n              <span className=\"like-count\">{post.likes.length} Likes</span>\r\n            </div>\r\n\r\n            <div className=\"comments-section\">\r\n              <div className=\"comments-list\">\r\n                {post.comments.map((comment, idx) => (\r\n                  <div key={idx} className=\"comment-item\">\r\n                    <strong>{comment.userId}:</strong> {comment.comment}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <textarea\r\n                placeholder=\"Add a comment\"\r\n                onBlur={(e) => handleComment(post._id, e.target.value)}\r\n                className=\"comment-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Noticeboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}