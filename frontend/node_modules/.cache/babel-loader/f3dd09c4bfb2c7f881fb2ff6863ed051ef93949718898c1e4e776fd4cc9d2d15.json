{"ast":null,"code":"var _jsxFileName = \"E:\\\\.3 DBMS\\\\Project\\\\Student-Gymkhana-IITJ\\\\frontend\\\\src\\\\components\\\\noticeboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./noticeboard.css\";\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [newPostContent, setNewPostContent] = useState(\"\");\n//   const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\n\n//   useEffect(() => {\n//     // Fetch posts from the server (replace with actual API endpoint)\n//     fetch(\"/posts\")\n//       .then((response) => response.json())\n//       .then((data) => setPosts(data));\n//   }, []);\n\n//   const handleLike = (postId) => {\n//     fetch(`/posts/${postId}/like`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ userId }),\n//     }).then(() => {\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, liked: true } : post)));\n//     });\n//   };\n\n//   const handleComment = (postId, comment) => {\n//     fetch(`/posts/${postId}/comment`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ userId, comment }),\n//     }).then(() => {\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, comments: [...post.comments, { userId, comment }] } : post)));\n//     });\n//   };\n\n//   const handleNewPost = () => {\n//     const newPost = {\n//       content: newPostContent,\n//       likes: [],\n//       comments: [],\n//     };\n\n//     // Post new content to server (replace with actual API endpoint)\n//     fetch(\"/posts\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(newPost),\n//     }).then(() => {\n//       setPosts([newPost, ...posts]); // Add new post to the front\n//       setNewPostContent(\"\"); // Clear the content field\n//     });\n//   };\n\n//   return (\n//     <div className=\"noticeboard-container\">\n//       <div className=\"new-post-block\">\n//         <textarea\n//           placeholder=\"Write something new...\"\n//           value={newPostContent}\n//           onChange={(e) => setNewPostContent(e.target.value)}\n//         ></textarea>\n//         <button onClick={handleNewPost}>Post</button>\n//       </div>\n\n//       <div className=\"posts-list\">\n//         {posts.map((post) => (\n//           <div key={post._id} className=\"post-block\">\n//             <div className=\"post-content\">\n//               <p>{post.content}</p>\n//             </div>\n\n//             <div className=\"post-actions\">\n//               <button className=\"like-btn\" onClick={() => handleLike(post._id)}>\n//                 Like\n//               </button>\n//               <span className=\"like-count\">{post.likes.length} Likes</span>\n//             </div>\n\n//             <div className=\"comments-section\">\n//               <div className=\"comments-list\">\n//                 {post.comments.map((comment, idx) => (\n//                   <div key={idx} className=\"comment-item\">\n//                     <strong>{comment.userId}:</strong> {comment.comment}\n//                   </div>\n//                 ))}\n//               </div>\n\n//               <textarea\n//                 placeholder=\"Add a comment\"\n//                 onBlur={(e) => handleComment(post._id, e.target.value)}\n//                 className=\"comment-input\"\n//               />\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;\n\n// import React, { useState } from 'react';\n// import './noticeboard.css';\n// import { FaHeart, FaComment, FaShare, FaUserCircle } from 'react-icons/fa';\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([\n//     {\n//       id: 1,\n//       author: 'Gurpreet Kaur Virdi',\n//       date: 'Jul 29, 2024',\n//       title: 'Tuning into Success: KukuFM’s Journey to Audio Excellence',\n//       description: 'The financial year ending 2018 will always remain fundamental when somewhere down the line we track the economic growth of India. In this year, India saw...',\n//       imageUrl: 'https://example.com/sample-image.jpg', // Add an image URL here\n//       likes: 4,\n//       comments: 3,\n//       isLiked: false,\n//     },\n//   ]);\n\n//   const [newPost, setNewPost] = useState('');\n//   const [comment, setComment] = useState('');\n\n//   const handleLike = (postId) => {\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\n//   };\n\n//   const handleComment = (postId) => {\n//     if (comment.trim()) {\n//       // Handle comment submission (for simplicity, we just reset the input)\n//       setComment('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"noticeboard\">\n//       {/* Add New Post Section */}\n//       <div className=\"new-post\">\n//         <textarea\n//           placeholder=\"Share some news...\"\n//           value={newPost}\n//           onChange={(e) => setNewPost(e.target.value)}\n//         />\n//         <div className=\"post-options\">\n//           <span>Add Photo</span>\n//           <span>Add Video</span>\n//           <span>Attach Files</span>\n//           <span>Tag People</span>\n//           <button className=\"share-button\">Share</button>\n//         </div>\n//       </div>\n\n//       {/* Post Feed */}\n//       <div className=\"posts\">\n//         {posts.map(post => (\n//           <div className=\"post-card\" key={post.id}>\n//             {/* Post Header */}\n//             <div className=\"post-header\">\n//               <FaUserCircle className=\"profile-icon\" />\n//               <div>\n//                 <h4>{post.author}</h4>\n//                 <span>{post.date}</span>\n//               </div>\n//               <FaShare className=\"share-icon\" />\n//             </div>\n\n//             {/* Post Content */}\n//             <div className=\"post-content\">\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\n//               <div className=\"post-details\">\n//                 <h3>{post.title}</h3>\n//                 <p>{post.description}</p>\n//               </div>\n//             </div>\n\n//             {/* Like and Comment Section */}\n//             <div className=\"post-actions\">\n//               <span>{post.likes} people liked the post.</span>\n//               <div className=\"like-comment\">\n//                 <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\n//                   <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\n//                 </button>\n//                 <button><FaComment /> Comment</button>\n//               </div>\n//             </div>\n\n//             {/* Comment Section */}\n//             <div className=\"comment-section\">\n//               <FaUserCircle className=\"profile-icon-small\" />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Press enter to comment\"\n//                 value={comment}\n//                 onChange={(e) => setComment(e.target.value)}\n//                 onKeyPress={(e) => e.key === 'Enter' && handleComment(post.id)}\n//               />\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;\n\n// import React, { useState } from 'react';\n// import './noticeboard.css';\n// import { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([\n//     {\n//       id: 1,\n//       author: 'Om Kumar',\n//       date: 'Oct 29, 2024',\n//       title: 'IIT Jodhpur choosen as the center for GenAI in India',\n//       description: 'Srijan—the Center of Excellence on Generative AI at IIT Jodhpur....',\n//       imageUrl: '/assets/news.png',\n//       likes: 4,\n//       comments: 3,\n//       isLiked: false,\n//       likedBy: ['Om', 'Sumeet', 'Aansh'],\n//       commentsList: ['Nice post!', 'Very informative!']\n//     },\n//   ]);\n\n//   const [newPost, setNewPost] = useState('');\n//   const [comment, setComment] = useState('');\n\n//   const handleLike = (postId) => {\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\n//   };\n\n//   const handleComment = (postId) => {\n//     if (comment.trim()) {\n//       setPosts(posts.map(post => post.id === postId ? { ...post, commentsList: [...post.commentsList, comment] } : post));\n//       setComment('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"noticeboard\">\n//       {/* Add New Post Section */}\n//       <h2>Share Your News</h2>\n//       <div className=\"new-post\">\n//         <FaUserCircle className=\"poster-avatar\" />\n//         <div className=\"post-input-area\">\n//           <textarea\n//             placeholder=\"Share some news...\"\n//             value={newPost}\n//             onChange={(e) => setNewPost(e.target.value)}\n//           />\n//           <div className=\"post-options\">\n//             <span>Add Photo</span>\n//             <span>Add Video</span>\n//             <span>Attach Files</span>\n//             <span>Tag People</span>\n//             <button className=\"post-button\">Post</button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Post Feed */}\n//       <div className=\"posts\">\n//         {posts.map(post => (\n//           <div className=\"post-card\" key={post.id}>\n//             {/* Post Header */}\n//             <div className=\"post-header\">\n//               <FaUserCircle className=\"profile-icon\" />\n//               <div className=\"post-author\">\n//                 <h4>{post.author}</h4>\n//                 <span className=\"post-date\">{post.date}</span>\n//               </div>\n//               <FaShare className=\"share-icon\" />\n//             </div>\n\n//             {/* Post Content */}\n//             <div className=\"post-content\">\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\n//               <div className=\"post-details\">\n//                 <h3>{post.title}</h3>\n//                 <p>{post.description}</p>\n//               </div>\n//             </div>\n\n//             {/* Like and Comment Section */}\n//             <div className=\"post-actions\">\n//               <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\n//                 <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\n//               </button>\n//               <span className=\"likes-comments\">\n//                 {post.likes} likes · {post.commentsList.length} comments\n//               </span>\n//             </div>\n\n//             {/* Comment Section */}\n//             <div className=\"comment-section\">\n//               <FaUserCircle className=\"profile-icon-small\" />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Write a comment...\"\n//                 value={comment}\n//                 onChange={(e) => setComment(e.target.value)}\n//               />\n//               {comment && <FaArrowRight onClick={() => handleComment(post.id)} className=\"comment-submit-icon\" />}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;\nimport React, { useState, useEffect } from \"react\";\nimport './noticeboard.css';\nimport { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Noticeboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const [comment, setComment] = useState('');\n  const [userId] = useState('user123'); // Replace with actual userId logic\n\n  useEffect(() => {\n    // Fetch posts from the server\n    fetch(\"http://localhost:3300/api/blogs\") // Replace with your backend endpoint\n    .then(response => response.json()).then(data => setPosts(data));\n  }, []);\n  const handleLike = postId => {\n    fetch(`/api/blogs/${postId}/like`, {\n      method: 'PUT'\n    }).then(() => {\n      setPosts(posts.map(post => post.blog_id === postId ? {\n        ...post,\n        likes: post.likes + 1\n      } : post));\n    });\n  };\n  const handleComment = postId => {\n    if (comment.trim()) {\n      fetch(`/api/blogs/${postId}/comment`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          u_mail: userId,\n          comment: comment,\n          date: Date.now()\n        })\n      }).then(() => {\n        setPosts(posts.map(post => post.blog_id === postId ? {\n          ...post,\n          comments: [...post.comments, {\n            comment,\n            comment_date: Date.now(),\n            comment_user: userId\n          }]\n        } : post));\n        setComment('');\n      });\n    }\n  };\n  const handleNewPost = () => {\n    const newPostData = {\n      u_mail: userId,\n      img: '/path/to/image.jpg',\n      // Update this path with actual image URL from your file system\n      title: 'New Post Title',\n      // You can add dynamic title\n      description: newPost,\n      likes: 0\n    };\n    fetch(\"/api/blogs\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPostData)\n    }).then(() => {\n      setPosts([newPostData, ...posts]);\n      setNewPost('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"noticeboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Share Your News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-post\",\n      children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n        className: \"poster-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Share some news...\",\n          value: newPost,\n          onChange: e => setNewPost(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Attach Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Tag People\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"post-button\",\n            onClick: handleNewPost,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n            className: \"profile-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: post.u_mail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-date\",\n              children: new Date(post.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FaShare, {\n            className: \"share-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.image_url,\n            alt: \"Post\",\n            className: \"post-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLike(post.blog_id),\n            className: post.likes > 0 ? 'liked' : '',\n            children: [/*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), \" \", post.likes, \" \", post.likes === 1 ? 'Like' : 'Likes']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"likes-comments\",\n            children: [post.likes, \" likes \\xB7 \", post.comments.length, \" comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-section\",\n          children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n            className: \"profile-icon-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Write a comment...\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), comment && /*#__PURE__*/_jsxDEV(FaArrowRight, {\n            onClick: () => handleComment(post.blog_id),\n            className: \"comment-submit-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          children: post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: comment.comment_user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, this), \": \", comment.comment]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, post.blog_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n};\n_s(Noticeboard, \"tDJ+RLpQVlMjLSHxSduuBOh3240=\");\n_c = Noticeboard;\nexport default Noticeboard;\nvar _c;\n$RefreshReg$(_c, \"Noticeboard\");","map":{"version":3,"names":["React","useState","useEffect","FaHeart","FaComment","FaShare","FaUserCircle","FaArrowRight","jsxDEV","_jsxDEV","Noticeboard","_s","posts","setPosts","newPost","setNewPost","comment","setComment","userId","fetch","then","response","json","data","handleLike","postId","method","map","post","blog_id","likes","handleComment","trim","headers","body","JSON","stringify","u_mail","date","Date","now","comments","comment_date","comment_user","handleNewPost","newPostData","img","title","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","toLocaleDateString","src","image_url","alt","length","type","index","_c","$RefreshReg$"],"sources":["E:/.3 DBMS/Project/Student-Gymkhana-IITJ/frontend/src/components/noticeboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"./noticeboard.css\";\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [newPostContent, setNewPostContent] = useState(\"\");\r\n//   const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\r\n\r\n//   useEffect(() => {\r\n//     // Fetch posts from the server (replace with actual API endpoint)\r\n//     fetch(\"/posts\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setPosts(data));\r\n//   }, []);\r\n\r\n//   const handleLike = (postId) => {\r\n//     fetch(`/posts/${postId}/like`, {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ userId }),\r\n//     }).then(() => {\r\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, liked: true } : post)));\r\n//     });\r\n//   };\r\n\r\n//   const handleComment = (postId, comment) => {\r\n//     fetch(`/posts/${postId}/comment`, {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ userId, comment }),\r\n//     }).then(() => {\r\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, comments: [...post.comments, { userId, comment }] } : post)));\r\n//     });\r\n//   };\r\n\r\n//   const handleNewPost = () => {\r\n//     const newPost = {\r\n//       content: newPostContent,\r\n//       likes: [],\r\n//       comments: [],\r\n//     };\r\n\r\n//     // Post new content to server (replace with actual API endpoint)\r\n//     fetch(\"/posts\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(newPost),\r\n//     }).then(() => {\r\n//       setPosts([newPost, ...posts]); // Add new post to the front\r\n//       setNewPostContent(\"\"); // Clear the content field\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard-container\">\r\n//       <div className=\"new-post-block\">\r\n//         <textarea\r\n//           placeholder=\"Write something new...\"\r\n//           value={newPostContent}\r\n//           onChange={(e) => setNewPostContent(e.target.value)}\r\n//         ></textarea>\r\n//         <button onClick={handleNewPost}>Post</button>\r\n//       </div>\r\n\r\n//       <div className=\"posts-list\">\r\n//         {posts.map((post) => (\r\n//           <div key={post._id} className=\"post-block\">\r\n//             <div className=\"post-content\">\r\n//               <p>{post.content}</p>\r\n//             </div>\r\n\r\n//             <div className=\"post-actions\">\r\n//               <button className=\"like-btn\" onClick={() => handleLike(post._id)}>\r\n//                 Like\r\n//               </button>\r\n//               <span className=\"like-count\">{post.likes.length} Likes</span>\r\n//             </div>\r\n\r\n//             <div className=\"comments-section\">\r\n//               <div className=\"comments-list\">\r\n//                 {post.comments.map((comment, idx) => (\r\n//                   <div key={idx} className=\"comment-item\">\r\n//                     <strong>{comment.userId}:</strong> {comment.comment}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n\r\n//               <textarea\r\n//                 placeholder=\"Add a comment\"\r\n//                 onBlur={(e) => handleComment(post._id, e.target.value)}\r\n//                 className=\"comment-input\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Noticeboard;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './noticeboard.css';\r\n// import { FaHeart, FaComment, FaShare, FaUserCircle } from 'react-icons/fa';\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([\r\n//     {\r\n//       id: 1,\r\n//       author: 'Gurpreet Kaur Virdi',\r\n//       date: 'Jul 29, 2024',\r\n//       title: 'Tuning into Success: KukuFM’s Journey to Audio Excellence',\r\n//       description: 'The financial year ending 2018 will always remain fundamental when somewhere down the line we track the economic growth of India. In this year, India saw...',\r\n//       imageUrl: 'https://example.com/sample-image.jpg', // Add an image URL here\r\n//       likes: 4,\r\n//       comments: 3,\r\n//       isLiked: false,\r\n//     },\r\n//   ]);\r\n\r\n//   const [newPost, setNewPost] = useState('');\r\n//   const [comment, setComment] = useState('');\r\n\r\n//   const handleLike = (postId) => {\r\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\r\n//   };\r\n\r\n//   const handleComment = (postId) => {\r\n//     if (comment.trim()) {\r\n//       // Handle comment submission (for simplicity, we just reset the input)\r\n//       setComment('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard\">\r\n//       {/* Add New Post Section */}\r\n//       <div className=\"new-post\">\r\n//         <textarea\r\n//           placeholder=\"Share some news...\"\r\n//           value={newPost}\r\n//           onChange={(e) => setNewPost(e.target.value)}\r\n//         />\r\n//         <div className=\"post-options\">\r\n//           <span>Add Photo</span>\r\n//           <span>Add Video</span>\r\n//           <span>Attach Files</span>\r\n//           <span>Tag People</span>\r\n//           <button className=\"share-button\">Share</button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Post Feed */}\r\n//       <div className=\"posts\">\r\n//         {posts.map(post => (\r\n//           <div className=\"post-card\" key={post.id}>\r\n//             {/* Post Header */}\r\n//             <div className=\"post-header\">\r\n//               <FaUserCircle className=\"profile-icon\" />\r\n//               <div>\r\n//                 <h4>{post.author}</h4>\r\n//                 <span>{post.date}</span>\r\n//               </div>\r\n//               <FaShare className=\"share-icon\" />\r\n//             </div>\r\n\r\n//             {/* Post Content */}\r\n//             <div className=\"post-content\">\r\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n//               <div className=\"post-details\">\r\n//                 <h3>{post.title}</h3>\r\n//                 <p>{post.description}</p>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Like and Comment Section */}\r\n//             <div className=\"post-actions\">\r\n//               <span>{post.likes} people liked the post.</span>\r\n//               <div className=\"like-comment\">\r\n//                 <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\r\n//                   <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\r\n//                 </button>\r\n//                 <button><FaComment /> Comment</button>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Comment Section */}\r\n//             <div className=\"comment-section\">\r\n//               <FaUserCircle className=\"profile-icon-small\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Press enter to comment\"\r\n//                 value={comment}\r\n//                 onChange={(e) => setComment(e.target.value)}\r\n//                 onKeyPress={(e) => e.key === 'Enter' && handleComment(post.id)}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Noticeboard;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './noticeboard.css';\r\n// import { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([\r\n//     {\r\n//       id: 1,\r\n//       author: 'Om Kumar',\r\n//       date: 'Oct 29, 2024',\r\n//       title: 'IIT Jodhpur choosen as the center for GenAI in India',\r\n//       description: 'Srijan—the Center of Excellence on Generative AI at IIT Jodhpur....',\r\n//       imageUrl: '/assets/news.png',\r\n//       likes: 4,\r\n//       comments: 3,\r\n//       isLiked: false,\r\n//       likedBy: ['Om', 'Sumeet', 'Aansh'],\r\n//       commentsList: ['Nice post!', 'Very informative!']\r\n//     },\r\n//   ]);\r\n\r\n//   const [newPost, setNewPost] = useState('');\r\n//   const [comment, setComment] = useState('');\r\n\r\n//   const handleLike = (postId) => {\r\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\r\n//   };\r\n\r\n//   const handleComment = (postId) => {\r\n//     if (comment.trim()) {\r\n//       setPosts(posts.map(post => post.id === postId ? { ...post, commentsList: [...post.commentsList, comment] } : post));\r\n//       setComment('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard\">\r\n//       {/* Add New Post Section */}\r\n//       <h2>Share Your News</h2>\r\n//       <div className=\"new-post\">\r\n//         <FaUserCircle className=\"poster-avatar\" />\r\n//         <div className=\"post-input-area\">\r\n//           <textarea\r\n//             placeholder=\"Share some news...\"\r\n//             value={newPost}\r\n//             onChange={(e) => setNewPost(e.target.value)}\r\n//           />\r\n//           <div className=\"post-options\">\r\n//             <span>Add Photo</span>\r\n//             <span>Add Video</span>\r\n//             <span>Attach Files</span>\r\n//             <span>Tag People</span>\r\n//             <button className=\"post-button\">Post</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Post Feed */}\r\n//       <div className=\"posts\">\r\n//         {posts.map(post => (\r\n//           <div className=\"post-card\" key={post.id}>\r\n//             {/* Post Header */}\r\n//             <div className=\"post-header\">\r\n//               <FaUserCircle className=\"profile-icon\" />\r\n//               <div className=\"post-author\">\r\n//                 <h4>{post.author}</h4>\r\n//                 <span className=\"post-date\">{post.date}</span>\r\n//               </div>\r\n//               <FaShare className=\"share-icon\" />\r\n//             </div>\r\n\r\n//             {/* Post Content */}\r\n//             <div className=\"post-content\">\r\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n//               <div className=\"post-details\">\r\n//                 <h3>{post.title}</h3>\r\n//                 <p>{post.description}</p>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Like and Comment Section */}\r\n//             <div className=\"post-actions\">\r\n//               <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\r\n//                 <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\r\n//               </button>\r\n//               <span className=\"likes-comments\">\r\n//                 {post.likes} likes · {post.commentsList.length} comments\r\n//               </span>\r\n//             </div>\r\n\r\n//             {/* Comment Section */}\r\n//             <div className=\"comment-section\">\r\n//               <FaUserCircle className=\"profile-icon-small\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Write a comment...\"\r\n//                 value={comment}\r\n//                 onChange={(e) => setComment(e.target.value)}\r\n//               />\r\n//               {comment && <FaArrowRight onClick={() => handleComment(post.id)} className=\"comment-submit-icon\" />}\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Noticeboard;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport './noticeboard.css';\r\nimport { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\r\n\r\nconst Noticeboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [newPost, setNewPost] = useState('');\r\n  const [comment, setComment] = useState('');\r\n  const [userId] = useState('user123'); // Replace with actual userId logic\r\n\r\n  useEffect(() => {\r\n    // Fetch posts from the server\r\n    fetch(\"http://localhost:3300/api/blogs\") // Replace with your backend endpoint\r\n      .then(response => response.json())\r\n      .then(data => setPosts(data));\r\n  }, []);\r\n\r\n  const handleLike = (postId) => {\r\n    fetch(`/api/blogs/${postId}/like`, {\r\n      method: 'PUT',\r\n    }).then(() => {\r\n      setPosts(posts.map(post => post.blog_id === postId ? { ...post, likes: post.likes + 1 } : post));\r\n    });\r\n  };\r\n\r\n  const handleComment = (postId) => {\r\n    if (comment.trim()) {\r\n      fetch(`/api/blogs/${postId}/comment`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ u_mail: userId, comment: comment, date: Date.now() }),\r\n      }).then(() => {\r\n        setPosts(posts.map(post => post.blog_id === postId ? {\r\n          ...post,\r\n          comments: [...post.comments, { comment, comment_date: Date.now(), comment_user: userId }]\r\n        } : post));\r\n        setComment('');\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleNewPost = () => {\r\n    const newPostData = {\r\n      u_mail: userId,\r\n      img: '/path/to/image.jpg', // Update this path with actual image URL from your file system\r\n      title: 'New Post Title', // You can add dynamic title\r\n      description: newPost,\r\n      likes: 0,\r\n    };\r\n\r\n    fetch(\"/api/blogs\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(newPostData),\r\n    }).then(() => {\r\n      setPosts([newPostData, ...posts]);\r\n      setNewPost('');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"noticeboard\">\r\n      {/* Add New Post Section */}\r\n      <h2>Share Your News</h2>\r\n      <div className=\"new-post\">\r\n        <FaUserCircle className=\"poster-avatar\" />\r\n        <div className=\"post-input-area\">\r\n          <textarea\r\n            placeholder=\"Share some news...\"\r\n            value={newPost}\r\n            onChange={(e) => setNewPost(e.target.value)}\r\n          />\r\n          <div className=\"post-options\">\r\n            <span>Add Photo</span>\r\n            <span>Add Video</span>\r\n            <span>Attach Files</span>\r\n            <span>Tag People</span>\r\n            <button className=\"post-button\" onClick={handleNewPost}>Post</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Post Feed */}\r\n      <div className=\"posts\">\r\n        {posts.map(post => (\r\n          <div className=\"post-card\" key={post.blog_id}>\r\n            {/* Post Header */}\r\n            <div className=\"post-header\">\r\n              <FaUserCircle className=\"profile-icon\" />\r\n              <div className=\"post-author\">\r\n                <h4>{post.u_mail}</h4>\r\n                <span className=\"post-date\">{new Date(post.date).toLocaleDateString()}</span>\r\n              </div>\r\n              <FaShare className=\"share-icon\" />\r\n            </div>\r\n\r\n            {/* Post Content */}\r\n            <div className=\"post-content\">\r\n              <img src={post.image_url} alt=\"Post\" className=\"post-image\" />\r\n              <div className=\"post-details\">\r\n                <h3>{post.title}</h3>\r\n                <p>{post.description}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Like and Comment Section */}\r\n            <div className=\"post-actions\">\r\n              <button onClick={() => handleLike(post.blog_id)} className={post.likes > 0 ? 'liked' : ''}>\r\n                <FaHeart /> {post.likes} {post.likes === 1 ? 'Like' : 'Likes'}\r\n              </button>\r\n              <span className=\"likes-comments\">\r\n                {post.likes} likes · {post.comments.length} comments\r\n              </span>\r\n            </div>\r\n\r\n            {/* Comment Section */}\r\n            <div className=\"comment-section\">\r\n              <FaUserCircle className=\"profile-icon-small\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Write a comment...\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n              />\r\n              {comment && <FaArrowRight onClick={() => handleComment(post.blog_id)} className=\"comment-submit-icon\" />}\r\n            </div>\r\n\r\n            {/* Display Comments */}\r\n            <div className=\"comments-list\">\r\n              {post.comments.map((comment, index) => (\r\n                <div key={index} className=\"comment-item\">\r\n                  <strong>{comment.comment_user}</strong>: {comment.comment}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Noticeboard;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}