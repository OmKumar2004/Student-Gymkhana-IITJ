{"ast":null,"code":"var _jsxFileName = \"E:\\\\.3 DBMS\\\\Project\\\\Student-Gymkhana-IITJ\\\\frontend\\\\src\\\\components\\\\ContactUs.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './ContactUs.css';\n\n// const FeedbackPage = () => {\n//   const [recipient, setRecipient] = useState(''); // Stores selected recipient\n//   const [content, setContent] = useState(''); // Stores content of the feedback\n//   const [submitted, setSubmitted] = useState(false); // Tracks submission status\n\n//   // Handle form submission\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (recipient && content) {\n//       setSubmitted(true);\n//       setContent('');\n//       setRecipient('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"feedback-page\">\n//       <div className=\"feedback-block\">\n//         <h2 className=\"feedback-heading\">Feedback Form</h2>\n\n//         {/* Recipient Dropdown */}\n//         <div className=\"feedback-recipient\">\n//           <label htmlFor=\"recipient\" className=\"feedback-label-left\">To:</label>\n//           <div className=\"dropdown-container\">\n//             <select \n//               id=\"recipient\" \n//               value={recipient} \n//               onChange={(e) => setRecipient(e.target.value)} \n//               className=\"dropdown-select\"\n//             >\n//               <option value=\"\">Select Recipient</option>\n//               <option value=\"Gen Secy @ SS\">Gen Secy @ SS</option>\n//               <option value=\"Gen Secy @ SAC\">Gen Secy @ SAC</option>\n//               <option value=\"Gen Secy @ ACAC\">Gen Secy @ ACAC</option>\n//               <option value=\"Admin\">Admin</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         {/* Content Box */}\n//         <div className=\"feedback-content\">\n//           <label htmlFor=\"content\" className=\"feedback-label-left\">Content:</label>\n//           <textarea \n//             id=\"content\" \n//             value={content} \n//             onChange={(e) => setContent(e.target.value)} \n//             placeholder=\"Write your feedback here...\" \n//             className=\"content-textarea\" \n//           ></textarea>\n//         </div>\n\n//         {/* Submit Button */}\n//         <button onClick={handleSubmit} className=\"submit-button\">Submit</button>\n\n//         {/* Success Message */}\n//         {submitted && <p className=\"success-message\">Your feedback has been submitted successfully.</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default FeedbackPage;\nimport React, { useState } from 'react';\nimport './ContactUs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackPage = () => {\n  _s();\n  const [recipient, setRecipient] = useState(''); // Stores selected recipient\n  const [content, setContent] = useState(''); // Stores content of the feedback\n  const [submitted, setSubmitted] = useState(false); // Tracks submission status\n\n  // Map of recipient options to email addresses\n  const recipientEmailMap = {\n    \"Gen Secy @ SS\": \"gensecy_ss@iitj.ac.in\",\n    \"Gen Secy @ SAC\": \"gensecy_sac@iitj.ac.in\",\n    \"Gen Secy @ ACAC\": \"gensecy_acac@iitj.ac.in\",\n    \"Admin\": \"studentgymkhanaiitj@gmail.com\" // Adjust email if needed\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (recipient && content) {\n      const email = recipientEmailMap[recipient]; // Get the email address based on selected recipient\n\n      try {\n        // Send feedback data to backend\n        await fetch('http://localhost:3300/apis/v1/common/feedback', {\n          // Use the correct endpoint\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            from_mail: \"sumeetpatil20004@gmail.com\",\n            // Email of the selected recipient\n            to_mail: email,\n            feedback: content // Feedback content\n          })\n        });\n\n        // Update state to reflect successful submission\n        setSubmitted(true);\n        setContent('');\n        setRecipient('');\n      } catch (error) {\n        console.error(\"Error sending feedback:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"feedback-heading\",\n        children: \"Feedback Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-recipient\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipient\",\n          className: \"feedback-label-left\",\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"recipient\",\n            value: recipient,\n            onChange: e => setRecipient(e.target.value),\n            className: \"dropdown-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Recipient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Gen Secy @ SS\",\n              children: \"Gen Secy @ SS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Gen Secy @ SAC\",\n              children: \"Gen Secy @ SAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Gen Secy @ ACAC\",\n              children: \"Gen Secy @ ACAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          className: \"feedback-label-left\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          placeholder: \"Write your feedback here...\",\n          className: \"content-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), submitted && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: \"Your feedback has been submitted successfully.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackPage, \"PD/f5YVLQdxX4oo8eXyHhN4DapA=\");\n_c = FeedbackPage;\nexport default FeedbackPage;\nvar _c;\n$RefreshReg$(_c, \"FeedbackPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FeedbackPage","_s","recipient","setRecipient","content","setContent","submitted","setSubmitted","recipientEmailMap","handleSubmit","e","preventDefault","email","fetch","method","headers","body","JSON","stringify","from_mail","to_mail","feedback","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/.3 DBMS/Project/Student-Gymkhana-IITJ/frontend/src/components/ContactUs.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './ContactUs.css';\r\n\r\n// const FeedbackPage = () => {\r\n//   const [recipient, setRecipient] = useState(''); // Stores selected recipient\r\n//   const [content, setContent] = useState(''); // Stores content of the feedback\r\n//   const [submitted, setSubmitted] = useState(false); // Tracks submission status\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (recipient && content) {\r\n//       setSubmitted(true);\r\n//       setContent('');\r\n//       setRecipient('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"feedback-page\">\r\n//       <div className=\"feedback-block\">\r\n//         <h2 className=\"feedback-heading\">Feedback Form</h2>\r\n        \r\n//         {/* Recipient Dropdown */}\r\n//         <div className=\"feedback-recipient\">\r\n//           <label htmlFor=\"recipient\" className=\"feedback-label-left\">To:</label>\r\n//           <div className=\"dropdown-container\">\r\n//             <select \r\n//               id=\"recipient\" \r\n//               value={recipient} \r\n//               onChange={(e) => setRecipient(e.target.value)} \r\n//               className=\"dropdown-select\"\r\n//             >\r\n//               <option value=\"\">Select Recipient</option>\r\n//               <option value=\"Gen Secy @ SS\">Gen Secy @ SS</option>\r\n//               <option value=\"Gen Secy @ SAC\">Gen Secy @ SAC</option>\r\n//               <option value=\"Gen Secy @ ACAC\">Gen Secy @ ACAC</option>\r\n//               <option value=\"Admin\">Admin</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Content Box */}\r\n//         <div className=\"feedback-content\">\r\n//           <label htmlFor=\"content\" className=\"feedback-label-left\">Content:</label>\r\n//           <textarea \r\n//             id=\"content\" \r\n//             value={content} \r\n//             onChange={(e) => setContent(e.target.value)} \r\n//             placeholder=\"Write your feedback here...\" \r\n//             className=\"content-textarea\" \r\n//           ></textarea>\r\n//         </div>\r\n\r\n//         {/* Submit Button */}\r\n//         <button onClick={handleSubmit} className=\"submit-button\">Submit</button>\r\n\r\n//         {/* Success Message */}\r\n//         {submitted && <p className=\"success-message\">Your feedback has been submitted successfully.</p>}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FeedbackPage;\r\nimport React, { useState } from 'react';\r\nimport './ContactUs.css';\r\n\r\nconst FeedbackPage = () => {\r\n  const [recipient, setRecipient] = useState(''); // Stores selected recipient\r\n  const [content, setContent] = useState(''); // Stores content of the feedback\r\n  const [submitted, setSubmitted] = useState(false); // Tracks submission status\r\n\r\n  // Map of recipient options to email addresses\r\n  const recipientEmailMap = {\r\n    \"Gen Secy @ SS\": \"gensecy_ss@iitj.ac.in\",\r\n    \"Gen Secy @ SAC\": \"gensecy_sac@iitj.ac.in\",\r\n    \"Gen Secy @ ACAC\": \"gensecy_acac@iitj.ac.in\",\r\n    \"Admin\": \"studentgymkhanaiitj@gmail.com\" // Adjust email if needed\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (recipient && content) {\r\n      const email = recipientEmailMap[recipient]; // Get the email address based on selected recipient\r\n      \r\n      try {\r\n        // Send feedback data to backend\r\n        await fetch('http://localhost:3300/apis/v1/common/feedback', { // Use the correct endpoint\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            from_mail: \"sumeetpatil20004@gmail.com\",       // Email of the selected recipient\r\n            to_mail: email,\r\n            feedback: content// Feedback content\r\n          })\r\n        });\r\n        \r\n        // Update state to reflect successful submission\r\n        setSubmitted(true);\r\n        setContent('');\r\n        setRecipient('');\r\n      } catch (error) {\r\n        console.error(\"Error sending feedback:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"feedback-page\">\r\n      <div className=\"feedback-block\">\r\n        <h2 className=\"feedback-heading\">Feedback Form</h2>\r\n        \r\n        {/* Recipient Dropdown */}\r\n        <div className=\"feedback-recipient\">\r\n          <label htmlFor=\"recipient\" className=\"feedback-label-left\">To:</label>\r\n          <div className=\"dropdown-container\">\r\n            <select \r\n              id=\"recipient\" \r\n              value={recipient} \r\n              onChange={(e) => setRecipient(e.target.value)} \r\n              className=\"dropdown-select\"\r\n            >\r\n              <option value=\"\">Select Recipient</option>\r\n              <option value=\"Gen Secy @ SS\">Gen Secy @ SS</option>\r\n              <option value=\"Gen Secy @ SAC\">Gen Secy @ SAC</option>\r\n              <option value=\"Gen Secy @ ACAC\">Gen Secy @ ACAC</option>\r\n              <option value=\"Admin\">Admin</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content Box */}\r\n        <div className=\"feedback-content\">\r\n          <label htmlFor=\"content\" className=\"feedback-label-left\">Content:</label>\r\n          <textarea \r\n            id=\"content\" \r\n            value={content} \r\n            onChange={(e) => setContent(e.target.value)} \r\n            placeholder=\"Write your feedback here...\" \r\n            className=\"content-textarea\" \r\n          ></textarea>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button onClick={handleSubmit} className=\"submit-button\">Submit</button>\r\n\r\n        {/* Success Message */}\r\n        {submitted && <p className=\"success-message\">Your feedback has been submitted successfully.</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}