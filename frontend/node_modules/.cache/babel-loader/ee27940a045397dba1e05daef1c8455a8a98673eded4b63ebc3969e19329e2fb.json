{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import \"./noticeboard.css\";\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [newPostContent, setNewPostContent] = useState(\"\");\n//   const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\n\n//   useEffect(() => {\n//     // Fetch posts from the server (replace with actual API endpoint)\n//     fetch(\"/posts\")\n//       .then((response) => response.json())\n//       .then((data) => setPosts(data));\n//   }, []);\n\n//   const handleLike = (postId) => {\n//     fetch(`/posts/${postId}/like`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ userId }),\n//     }).then(() => {\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, liked: true } : post)));\n//     });\n//   };\n\n//   const handleComment = (postId, comment) => {\n//     fetch(`/posts/${postId}/comment`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ userId, comment }),\n//     }).then(() => {\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, comments: [...post.comments, { userId, comment }] } : post)));\n//     });\n//   };\n\n//   const handleNewPost = () => {\n//     const newPost = {\n//       content: newPostContent,\n//       likes: [],\n//       comments: [],\n//     };\n\n//     // Post new content to server (replace with actual API endpoint)\n//     fetch(\"/posts\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(newPost),\n//     }).then(() => {\n//       setPosts([newPost, ...posts]); // Add new post to the front\n//       setNewPostContent(\"\"); // Clear the content field\n//     });\n//   };\n\n//   return (\n//     <div className=\"noticeboard-container\">\n//       <div className=\"new-post-block\">\n//         <textarea\n//           placeholder=\"Write something new...\"\n//           value={newPostContent}\n//           onChange={(e) => setNewPostContent(e.target.value)}\n//         ></textarea>\n//         <button onClick={handleNewPost}>Post</button>\n//       </div>\n\n//       <div className=\"posts-list\">\n//         {posts.map((post) => (\n//           <div key={post._id} className=\"post-block\">\n//             <div className=\"post-content\">\n//               <p>{post.content}</p>\n//             </div>\n\n//             <div className=\"post-actions\">\n//               <button className=\"like-btn\" onClick={() => handleLike(post._id)}>\n//                 Like\n//               </button>\n//               <span className=\"like-count\">{post.likes.length} Likes</span>\n//             </div>\n\n//             <div className=\"comments-section\">\n//               <div className=\"comments-list\">\n//                 {post.comments.map((comment, idx) => (\n//                   <div key={idx} className=\"comment-item\">\n//                     <strong>{comment.userId}:</strong> {comment.comment}\n//                   </div>\n//                 ))}\n//               </div>\n\n//               <textarea\n//                 placeholder=\"Add a comment\"\n//                 onBlur={(e) => handleComment(post._id, e.target.value)}\n//                 className=\"comment-input\"\n//               />\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;\n\n// import React, { useState } from 'react';\n// import './noticeboard.css';\n// import { FaHeart, FaComment, FaShare, FaUserCircle } from 'react-icons/fa';\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([\n//     {\n//       id: 1,\n//       author: 'Gurpreet Kaur Virdi',\n//       date: 'Jul 29, 2024',\n//       title: 'Tuning into Success: KukuFM’s Journey to Audio Excellence',\n//       description: 'The financial year ending 2018 will always remain fundamental when somewhere down the line we track the economic growth of India. In this year, India saw...',\n//       imageUrl: 'https://example.com/sample-image.jpg', // Add an image URL here\n//       likes: 4,\n//       comments: 3,\n//       isLiked: false,\n//     },\n//   ]);\n\n//   const [newPost, setNewPost] = useState('');\n//   const [comment, setComment] = useState('');\n\n//   const handleLike = (postId) => {\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\n//   };\n\n//   const handleComment = (postId) => {\n//     if (comment.trim()) {\n//       // Handle comment submission (for simplicity, we just reset the input)\n//       setComment('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"noticeboard\">\n//       {/* Add New Post Section */}\n//       <div className=\"new-post\">\n//         <textarea\n//           placeholder=\"Share some news...\"\n//           value={newPost}\n//           onChange={(e) => setNewPost(e.target.value)}\n//         />\n//         <div className=\"post-options\">\n//           <span>Add Photo</span>\n//           <span>Add Video</span>\n//           <span>Attach Files</span>\n//           <span>Tag People</span>\n//           <button className=\"share-button\">Share</button>\n//         </div>\n//       </div>\n\n//       {/* Post Feed */}\n//       <div className=\"posts\">\n//         {posts.map(post => (\n//           <div className=\"post-card\" key={post.id}>\n//             {/* Post Header */}\n//             <div className=\"post-header\">\n//               <FaUserCircle className=\"profile-icon\" />\n//               <div>\n//                 <h4>{post.author}</h4>\n//                 <span>{post.date}</span>\n//               </div>\n//               <FaShare className=\"share-icon\" />\n//             </div>\n\n//             {/* Post Content */}\n//             <div className=\"post-content\">\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\n//               <div className=\"post-details\">\n//                 <h3>{post.title}</h3>\n//                 <p>{post.description}</p>\n//               </div>\n//             </div>\n\n//             {/* Like and Comment Section */}\n//             <div className=\"post-actions\">\n//               <span>{post.likes} people liked the post.</span>\n//               <div className=\"like-comment\">\n//                 <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\n//                   <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\n//                 </button>\n//                 <button><FaComment /> Comment</button>\n//               </div>\n//             </div>\n\n//             {/* Comment Section */}\n//             <div className=\"comment-section\">\n//               <FaUserCircle className=\"profile-icon-small\" />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Press enter to comment\"\n//                 value={comment}\n//                 onChange={(e) => setComment(e.target.value)}\n//                 onKeyPress={(e) => e.key === 'Enter' && handleComment(post.id)}\n//               />\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;\n\n// import React, { useState } from 'react';\n// import './noticeboard.css';\n// import { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([\n//     {\n//       id: 1,\n//       author: 'Om Kumar',\n//       date: 'Oct 29, 2024',\n//       title: 'IIT Jodhpur choosen as the center for GenAI in India',\n//       description: 'Srijan—the Center of Excellence on Generative AI at IIT Jodhpur....',\n//       imageUrl: '/assets/news.png',\n//       likes: 4,\n//       comments: 3,\n//       isLiked: false,\n//       likedBy: ['Om', 'Sumeet', 'Aansh'],\n//       commentsList: ['Nice post!', 'Very informative!']\n//     },\n//   ]);\n\n//   const [newPost, setNewPost] = useState('');\n//   const [comment, setComment] = useState('');\n\n//   const handleLike = (postId) => {\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\n//   };\n\n//   const handleComment = (postId) => {\n//     if (comment.trim()) {\n//       setPosts(posts.map(post => post.id === postId ? { ...post, commentsList: [...post.commentsList, comment] } : post));\n//       setComment('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"noticeboard\">\n//       {/* Add New Post Section */}\n//       <h2>Share Your News</h2>\n//       <div className=\"new-post\">\n//         <FaUserCircle className=\"poster-avatar\" />\n//         <div className=\"post-input-area\">\n//           <textarea\n//             placeholder=\"Share some news...\"\n//             value={newPost}\n//             onChange={(e) => setNewPost(e.target.value)}\n//           />\n//           <div className=\"post-options\">\n//             <span>Add Photo</span>\n//             <span>Add Video</span>\n//             <span>Attach Files</span>\n//             <span>Tag People</span>\n//             <button className=\"post-button\">Post</button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Post Feed */}\n//       <div className=\"posts\">\n//         {posts.map(post => (\n//           <div className=\"post-card\" key={post.id}>\n//             {/* Post Header */}\n//             <div className=\"post-header\">\n//               <FaUserCircle className=\"profile-icon\" />\n//               <div className=\"post-author\">\n//                 <h4>{post.author}</h4>\n//                 <span className=\"post-date\">{post.date}</span>\n//               </div>\n//               <FaShare className=\"share-icon\" />\n//             </div>\n\n//             {/* Post Content */}\n//             <div className=\"post-content\">\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\n//               <div className=\"post-details\">\n//                 <h3>{post.title}</h3>\n//                 <p>{post.description}</p>\n//               </div>\n//             </div>\n\n//             {/* Like and Comment Section */}\n//             <div className=\"post-actions\">\n//               <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\n//                 <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\n//               </button>\n//               <span className=\"likes-comments\">\n//                 {post.likes} likes · {post.commentsList.length} comments\n//               </span>\n//             </div>\n\n//             {/* Comment Section */}\n//             <div className=\"comment-section\">\n//               <FaUserCircle className=\"profile-icon-small\" />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Write a comment...\"\n//                 value={comment}\n//                 onChange={(e) => setComment(e.target.value)}\n//               />\n//               {comment && <FaArrowRight onClick={() => handleComment(post.id)} className=\"comment-submit-icon\" />}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;\n// import React, { useState, useEffect } from 'react';\n// import './noticeboard.css';\n// import { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\n\n// const Noticeboard = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [newPost, setNewPost] = useState('');\n//   const [comment, setComment] = useState('');\n//   const [userId] = useState('b22cs053@iitj.ac.in'); // Example user ID, replace with actual user\n\n//   // Fetch posts on component mount\n//   useEffect(() => {\n//     fetch('http://localhost:3300/apis/v1/user/blogs')\n//       .then((response) => response.json())\n//       .then((data) => setPosts(data));\n//   }, []);\n\n//   const handleLike = (blogId) => {\n//     fetch(`http://localhost:3300/apis/v1/user/blogs/${blogId}`, {\n//       method: 'PUT',\n//     })\n//       .then((response) => response.json())\n//       .then(() => {\n//         // Update the local posts array to reflect the changes\n//         setPosts(posts.map((post) => \n//           post.blog_id === blogId ? { ...post, likes: post.likes + 1 } : post\n//         ));\n//       })\n//       .catch((error) => console.error('Error liking the post:', error));\n//   };\n\n//   const handleComment = (blogId) => {\n//     if (comment.trim()) {\n//       const newComment = {\n//         u_mail: userId,\n//         comment: comment,\n//         date: new Date().toISOString(), // Send current date and time\n//       };\n\n//       fetch(`http://localhost:3300/apis/v1/user/blogs/comment/${blogId}`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(newComment),\n//       })\n//         .then((response) => response.status === 201 && setComment(''))\n//         .then(() => {\n//           setPosts(posts.map((post) =>\n//             post.blog_id === blogId\n//               ? {\n//                   ...post,\n//                   comments: [\n//                     ...post.comments,\n//                     { comment: comment, comment_user: userId, comment_date: newComment.date },\n//                   ],\n//                 }\n//               : post\n//           ));\n//         })\n//         .catch((error) => console.error('Error posting comment:', error));\n//     }\n//   };\n\n//   const handleNewPost = () => {\n//     const newBlogPost = {\n//       u_mail: userId,\n//       img: '/assets/news.png', // Example image URL\n//       title: 'New Blog Post',\n//       description: newPost,\n//       likes: 0,\n//     };\n\n//     fetch('http://localhost:3300/apis/v1/user/blogs', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(newBlogPost),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setPosts([data, ...posts]);\n//         setNewPost('');\n//       })\n//       .catch((error) => console.error('Error creating new post:', error));\n//   };\n\n//   return (\n//     <div className=\"noticeboard\">\n//       {/* Add New Post Section */}\n//       <h2>Share Your News</h2>\n//       <div className=\"new-post\">\n//         <FaUserCircle className=\"poster-avatar\" />\n//         <div className=\"post-input-area\">\n//           <textarea\n//             placeholder=\"Share some news...\"\n//             value={newPost}\n//             onChange={(e) => setNewPost(e.target.value)}\n//           />\n//           <div className=\"post-options\">\n//             <span>Add Photo</span>\n//             <span>Add Video</span>\n//             <span>Attach Files</span>\n//             <span>Tag People</span>\n//             <button className=\"post-button\" onClick={handleNewPost}>Post</button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Post Feed */}\n//       <div className=\"posts\">\n//         {posts.map((post) => (\n//           <div className=\"post-card\" key={post.blog_id}>\n//             {/* Post Header */}\n//             <div className=\"post-header\">\n//               <FaUserCircle className=\"profile-icon\" />\n//               <div className=\"post-author\">\n//                 <h4>{post.user}</h4>\n//                 <span className=\"post-date\">{new Date(post.date).toLocaleDateString()}</span>\n//               </div>\n//               <FaShare className=\"share-icon\" />\n//             </div>\n\n//             {/* Post Content */}\n//             <div className=\"post-content\">\n//               <img src={post.image_url} alt=\"Post\" className=\"post-image\" />\n//               <div className=\"post-details\">\n//                 <h3>{post.title}</h3>\n//                 <p>{post.content}</p>\n//               </div>\n//             </div>\n\n//             {/* Like and Comment Section */}\n//             <div className=\"post-actions\">\n//               <button\n//                 onClick={() => handleLike(post.blog_id)}\n//                 className={post.likes > 0 ? 'liked' : ''}\n//               >\n//                 <FaHeart /> {post.likes} Likes\n//               </button>\n//               <span className=\"likes-comments\">\n//                 {post.comments.length} Comments\n//               </span>\n//             </div>\n\n//             {/* Comment Section */}\n//             <div className=\"comment-section\">\n//               <FaUserCircle className=\"profile-icon-small\" />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Write a comment...\"\n//                 value={comment}\n//                 onChange={(e) => setComment(e.target.value)}\n//               />\n//               {comment && <FaArrowRight onClick={() => handleComment(post.blog_id)} className=\"comment-submit-icon\" />}\n//             </div>\n\n//             {/* Display Comments */}\n//             <div className=\"comments-list\">\n//               {post.comments.map((comment, idx) => (\n//                 <div className=\"comment-item\" key={idx}>\n//                   <strong>{comment.comment_user}</strong>: {comment.comment}\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Noticeboard;","map":{"version":3,"names":[],"sources":["E:/.3 DBMS/Project/Student-Gymkhana-IITJ/frontend/src/components/noticeboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"./noticeboard.css\";\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [newPostContent, setNewPostContent] = useState(\"\");\r\n//   const [userId, setUserId] = useState(\"user123\"); // Example user ID, replace with actual\r\n\r\n//   useEffect(() => {\r\n//     // Fetch posts from the server (replace with actual API endpoint)\r\n//     fetch(\"/posts\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setPosts(data));\r\n//   }, []);\r\n\r\n//   const handleLike = (postId) => {\r\n//     fetch(`/posts/${postId}/like`, {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ userId }),\r\n//     }).then(() => {\r\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, liked: true } : post)));\r\n//     });\r\n//   };\r\n\r\n//   const handleComment = (postId, comment) => {\r\n//     fetch(`/posts/${postId}/comment`, {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ userId, comment }),\r\n//     }).then(() => {\r\n//       setPosts(posts.map((post) => (post._id === postId ? { ...post, comments: [...post.comments, { userId, comment }] } : post)));\r\n//     });\r\n//   };\r\n\r\n//   const handleNewPost = () => {\r\n//     const newPost = {\r\n//       content: newPostContent,\r\n//       likes: [],\r\n//       comments: [],\r\n//     };\r\n\r\n//     // Post new content to server (replace with actual API endpoint)\r\n//     fetch(\"/posts\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(newPost),\r\n//     }).then(() => {\r\n//       setPosts([newPost, ...posts]); // Add new post to the front\r\n//       setNewPostContent(\"\"); // Clear the content field\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard-container\">\r\n//       <div className=\"new-post-block\">\r\n//         <textarea\r\n//           placeholder=\"Write something new...\"\r\n//           value={newPostContent}\r\n//           onChange={(e) => setNewPostContent(e.target.value)}\r\n//         ></textarea>\r\n//         <button onClick={handleNewPost}>Post</button>\r\n//       </div>\r\n\r\n//       <div className=\"posts-list\">\r\n//         {posts.map((post) => (\r\n//           <div key={post._id} className=\"post-block\">\r\n//             <div className=\"post-content\">\r\n//               <p>{post.content}</p>\r\n//             </div>\r\n\r\n//             <div className=\"post-actions\">\r\n//               <button className=\"like-btn\" onClick={() => handleLike(post._id)}>\r\n//                 Like\r\n//               </button>\r\n//               <span className=\"like-count\">{post.likes.length} Likes</span>\r\n//             </div>\r\n\r\n//             <div className=\"comments-section\">\r\n//               <div className=\"comments-list\">\r\n//                 {post.comments.map((comment, idx) => (\r\n//                   <div key={idx} className=\"comment-item\">\r\n//                     <strong>{comment.userId}:</strong> {comment.comment}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n\r\n//               <textarea\r\n//                 placeholder=\"Add a comment\"\r\n//                 onBlur={(e) => handleComment(post._id, e.target.value)}\r\n//                 className=\"comment-input\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Noticeboard;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './noticeboard.css';\r\n// import { FaHeart, FaComment, FaShare, FaUserCircle } from 'react-icons/fa';\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([\r\n//     {\r\n//       id: 1,\r\n//       author: 'Gurpreet Kaur Virdi',\r\n//       date: 'Jul 29, 2024',\r\n//       title: 'Tuning into Success: KukuFM’s Journey to Audio Excellence',\r\n//       description: 'The financial year ending 2018 will always remain fundamental when somewhere down the line we track the economic growth of India. In this year, India saw...',\r\n//       imageUrl: 'https://example.com/sample-image.jpg', // Add an image URL here\r\n//       likes: 4,\r\n//       comments: 3,\r\n//       isLiked: false,\r\n//     },\r\n//   ]);\r\n\r\n//   const [newPost, setNewPost] = useState('');\r\n//   const [comment, setComment] = useState('');\r\n\r\n//   const handleLike = (postId) => {\r\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\r\n//   };\r\n\r\n//   const handleComment = (postId) => {\r\n//     if (comment.trim()) {\r\n//       // Handle comment submission (for simplicity, we just reset the input)\r\n//       setComment('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard\">\r\n//       {/* Add New Post Section */}\r\n//       <div className=\"new-post\">\r\n//         <textarea\r\n//           placeholder=\"Share some news...\"\r\n//           value={newPost}\r\n//           onChange={(e) => setNewPost(e.target.value)}\r\n//         />\r\n//         <div className=\"post-options\">\r\n//           <span>Add Photo</span>\r\n//           <span>Add Video</span>\r\n//           <span>Attach Files</span>\r\n//           <span>Tag People</span>\r\n//           <button className=\"share-button\">Share</button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Post Feed */}\r\n//       <div className=\"posts\">\r\n//         {posts.map(post => (\r\n//           <div className=\"post-card\" key={post.id}>\r\n//             {/* Post Header */}\r\n//             <div className=\"post-header\">\r\n//               <FaUserCircle className=\"profile-icon\" />\r\n//               <div>\r\n//                 <h4>{post.author}</h4>\r\n//                 <span>{post.date}</span>\r\n//               </div>\r\n//               <FaShare className=\"share-icon\" />\r\n//             </div>\r\n\r\n//             {/* Post Content */}\r\n//             <div className=\"post-content\">\r\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n//               <div className=\"post-details\">\r\n//                 <h3>{post.title}</h3>\r\n//                 <p>{post.description}</p>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Like and Comment Section */}\r\n//             <div className=\"post-actions\">\r\n//               <span>{post.likes} people liked the post.</span>\r\n//               <div className=\"like-comment\">\r\n//                 <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\r\n//                   <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\r\n//                 </button>\r\n//                 <button><FaComment /> Comment</button>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Comment Section */}\r\n//             <div className=\"comment-section\">\r\n//               <FaUserCircle className=\"profile-icon-small\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Press enter to comment\"\r\n//                 value={comment}\r\n//                 onChange={(e) => setComment(e.target.value)}\r\n//                 onKeyPress={(e) => e.key === 'Enter' && handleComment(post.id)}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Noticeboard;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import './noticeboard.css';\r\n// import { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([\r\n//     {\r\n//       id: 1,\r\n//       author: 'Om Kumar',\r\n//       date: 'Oct 29, 2024',\r\n//       title: 'IIT Jodhpur choosen as the center for GenAI in India',\r\n//       description: 'Srijan—the Center of Excellence on Generative AI at IIT Jodhpur....',\r\n//       imageUrl: '/assets/news.png',\r\n//       likes: 4,\r\n//       comments: 3,\r\n//       isLiked: false,\r\n//       likedBy: ['Om', 'Sumeet', 'Aansh'],\r\n//       commentsList: ['Nice post!', 'Very informative!']\r\n//     },\r\n//   ]);\r\n\r\n//   const [newPost, setNewPost] = useState('');\r\n//   const [comment, setComment] = useState('');\r\n\r\n//   const handleLike = (postId) => {\r\n//     setPosts(posts.map(post => post.id === postId ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 } : post));\r\n//   };\r\n\r\n//   const handleComment = (postId) => {\r\n//     if (comment.trim()) {\r\n//       setPosts(posts.map(post => post.id === postId ? { ...post, commentsList: [...post.commentsList, comment] } : post));\r\n//       setComment('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard\">\r\n//       {/* Add New Post Section */}\r\n//       <h2>Share Your News</h2>\r\n//       <div className=\"new-post\">\r\n//         <FaUserCircle className=\"poster-avatar\" />\r\n//         <div className=\"post-input-area\">\r\n//           <textarea\r\n//             placeholder=\"Share some news...\"\r\n//             value={newPost}\r\n//             onChange={(e) => setNewPost(e.target.value)}\r\n//           />\r\n//           <div className=\"post-options\">\r\n//             <span>Add Photo</span>\r\n//             <span>Add Video</span>\r\n//             <span>Attach Files</span>\r\n//             <span>Tag People</span>\r\n//             <button className=\"post-button\">Post</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Post Feed */}\r\n//       <div className=\"posts\">\r\n//         {posts.map(post => (\r\n//           <div className=\"post-card\" key={post.id}>\r\n//             {/* Post Header */}\r\n//             <div className=\"post-header\">\r\n//               <FaUserCircle className=\"profile-icon\" />\r\n//               <div className=\"post-author\">\r\n//                 <h4>{post.author}</h4>\r\n//                 <span className=\"post-date\">{post.date}</span>\r\n//               </div>\r\n//               <FaShare className=\"share-icon\" />\r\n//             </div>\r\n\r\n//             {/* Post Content */}\r\n//             <div className=\"post-content\">\r\n//               <img src={post.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n//               <div className=\"post-details\">\r\n//                 <h3>{post.title}</h3>\r\n//                 <p>{post.description}</p>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Like and Comment Section */}\r\n//             <div className=\"post-actions\">\r\n//               <button onClick={() => handleLike(post.id)} className={post.isLiked ? 'liked' : ''}>\r\n//                 <FaHeart /> {post.isLiked ? 'Liked' : 'Like'}\r\n//               </button>\r\n//               <span className=\"likes-comments\">\r\n//                 {post.likes} likes · {post.commentsList.length} comments\r\n//               </span>\r\n//             </div>\r\n\r\n//             {/* Comment Section */}\r\n//             <div className=\"comment-section\">\r\n//               <FaUserCircle className=\"profile-icon-small\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Write a comment...\"\r\n//                 value={comment}\r\n//                 onChange={(e) => setComment(e.target.value)}\r\n//               />\r\n//               {comment && <FaArrowRight onClick={() => handleComment(post.id)} className=\"comment-submit-icon\" />}\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default Noticeboard;\r\n// import React, { useState, useEffect } from 'react';\r\n// import './noticeboard.css';\r\n// import { FaHeart, FaComment, FaShare, FaUserCircle, FaArrowRight } from 'react-icons/fa';\r\n\r\n// const Noticeboard = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [newPost, setNewPost] = useState('');\r\n//   const [comment, setComment] = useState('');\r\n//   const [userId] = useState('b22cs053@iitj.ac.in'); // Example user ID, replace with actual user\r\n\r\n//   // Fetch posts on component mount\r\n//   useEffect(() => {\r\n//     fetch('http://localhost:3300/apis/v1/user/blogs')\r\n//       .then((response) => response.json())\r\n//       .then((data) => setPosts(data));\r\n//   }, []);\r\n\r\n//   const handleLike = (blogId) => {\r\n//     fetch(`http://localhost:3300/apis/v1/user/blogs/${blogId}`, {\r\n//       method: 'PUT',\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then(() => {\r\n//         // Update the local posts array to reflect the changes\r\n//         setPosts(posts.map((post) => \r\n//           post.blog_id === blogId ? { ...post, likes: post.likes + 1 } : post\r\n//         ));\r\n//       })\r\n//       .catch((error) => console.error('Error liking the post:', error));\r\n//   };\r\n\r\n//   const handleComment = (blogId) => {\r\n//     if (comment.trim()) {\r\n//       const newComment = {\r\n//         u_mail: userId,\r\n//         comment: comment,\r\n//         date: new Date().toISOString(), // Send current date and time\r\n//       };\r\n\r\n//       fetch(`http://localhost:3300/apis/v1/user/blogs/comment/${blogId}`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(newComment),\r\n//       })\r\n//         .then((response) => response.status === 201 && setComment(''))\r\n//         .then(() => {\r\n//           setPosts(posts.map((post) =>\r\n//             post.blog_id === blogId\r\n//               ? {\r\n//                   ...post,\r\n//                   comments: [\r\n//                     ...post.comments,\r\n//                     { comment: comment, comment_user: userId, comment_date: newComment.date },\r\n//                   ],\r\n//                 }\r\n//               : post\r\n//           ));\r\n//         })\r\n//         .catch((error) => console.error('Error posting comment:', error));\r\n//     }\r\n//   };\r\n\r\n//   const handleNewPost = () => {\r\n//     const newBlogPost = {\r\n//       u_mail: userId,\r\n//       img: '/assets/news.png', // Example image URL\r\n//       title: 'New Blog Post',\r\n//       description: newPost,\r\n//       likes: 0,\r\n//     };\r\n\r\n//     fetch('http://localhost:3300/apis/v1/user/blogs', {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(newBlogPost),\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setPosts([data, ...posts]);\r\n//         setNewPost('');\r\n//       })\r\n//       .catch((error) => console.error('Error creating new post:', error));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"noticeboard\">\r\n//       {/* Add New Post Section */}\r\n//       <h2>Share Your News</h2>\r\n//       <div className=\"new-post\">\r\n//         <FaUserCircle className=\"poster-avatar\" />\r\n//         <div className=\"post-input-area\">\r\n//           <textarea\r\n//             placeholder=\"Share some news...\"\r\n//             value={newPost}\r\n//             onChange={(e) => setNewPost(e.target.value)}\r\n//           />\r\n//           <div className=\"post-options\">\r\n//             <span>Add Photo</span>\r\n//             <span>Add Video</span>\r\n//             <span>Attach Files</span>\r\n//             <span>Tag People</span>\r\n//             <button className=\"post-button\" onClick={handleNewPost}>Post</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Post Feed */}\r\n//       <div className=\"posts\">\r\n//         {posts.map((post) => (\r\n//           <div className=\"post-card\" key={post.blog_id}>\r\n//             {/* Post Header */}\r\n//             <div className=\"post-header\">\r\n//               <FaUserCircle className=\"profile-icon\" />\r\n//               <div className=\"post-author\">\r\n//                 <h4>{post.user}</h4>\r\n//                 <span className=\"post-date\">{new Date(post.date).toLocaleDateString()}</span>\r\n//               </div>\r\n//               <FaShare className=\"share-icon\" />\r\n//             </div>\r\n\r\n//             {/* Post Content */}\r\n//             <div className=\"post-content\">\r\n//               <img src={post.image_url} alt=\"Post\" className=\"post-image\" />\r\n//               <div className=\"post-details\">\r\n//                 <h3>{post.title}</h3>\r\n//                 <p>{post.content}</p>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Like and Comment Section */}\r\n//             <div className=\"post-actions\">\r\n//               <button\r\n//                 onClick={() => handleLike(post.blog_id)}\r\n//                 className={post.likes > 0 ? 'liked' : ''}\r\n//               >\r\n//                 <FaHeart /> {post.likes} Likes\r\n//               </button>\r\n//               <span className=\"likes-comments\">\r\n//                 {post.comments.length} Comments\r\n//               </span>\r\n//             </div>\r\n\r\n//             {/* Comment Section */}\r\n//             <div className=\"comment-section\">\r\n//               <FaUserCircle className=\"profile-icon-small\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Write a comment...\"\r\n//                 value={comment}\r\n//                 onChange={(e) => setComment(e.target.value)}\r\n//               />\r\n//               {comment && <FaArrowRight onClick={() => handleComment(post.blog_id)} className=\"comment-submit-icon\" />}\r\n//             </div>\r\n\r\n//             {/* Display Comments */}\r\n//             <div className=\"comments-list\">\r\n//               {post.comments.map((comment, idx) => (\r\n//                 <div className=\"comment-item\" key={idx}>\r\n//                   <strong>{comment.comment_user}</strong>: {comment.comment}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Noticeboard;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}